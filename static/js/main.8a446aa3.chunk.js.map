{"version":3,"sources":["components/Canvas/index.jsx","components/Canvas/Canvas.jsx","components/ServerImages/index.jsx","components/ServerImages/ServerImages.jsx","components/ColorPicker/index.jsx","components/ColorPicker/ColorPicker.jsx","components/BrushSize/index.jsx","components/BrushSize/BrushSize.jsx","components/Header/index.jsx","components/Header/Header.jsx","components/LoadImage/index.jsx","components/LoadImage/LoadImage.jsx","components/Container/index.jsx","components/Container/Container.jsx","components/App.jsx","index.js"],"names":["Canvas","props","className","height","onMouseDown","startDrawing","onMouseUp","finishDrawing","onMouseMove","draw","ref","canvasRef","ServerImages","loader","type","color","width","images","length","map","image","index","src","id","alt","onClick","loadImage","saveImage","deleteAll","ColorPicker","boxColor","backgroundColor","rgbColor","title","style","min","max","name","value","red","onChange","changeColor","green","blue","step","alpha","BrushSize","brushSize","event","setBrushSize","target","Header","expandCanvas","setExpandCanvas","offset","x","y","LoadImage","htmlFor","handleFiles","Style","fileName","Container","clearCanvas","App","useState","brushColor","setBrushColor","bgColor","setBgColor","rgbBrushColor","rgbBgColor","setOffset","setFileName","setImages","setLoader","isDrawing","setIsDrawing","useRef","contextRef","inputRef","resizeHandler","_","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","fetchData","a","fetch","res","json","canvas","context","getContext","lineCap","strokeStyle","lineWidth","prepareCanvas","then","fillStyle","fillRect","blob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","b64toBlob","split","trim","img","Image","URL","createObjectURL","onload","drawImage","imageUrl","toDataURL","method","headers","body","JSON","stringify","status","alert","nativeEvent","offsetX","offsetY","beginPath","moveTo","closePath","lineTo","stroke","files","file","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a446aa3.chunk.js","sourcesContent":["import Canvas from \"./Canvas\";\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"./Canvas.css\";\r\n\r\nconst Canvas = (props) => {\r\n  return (\r\n    <canvas\r\n      className=\"card shadow rounded-0 rounded-top m-0\"\r\n      height=\"600\"\r\n      onMouseDown={props.startDrawing}\r\n      onMouseUp={props.finishDrawing}\r\n      onMouseMove={props.draw}\r\n      ref={props.canvasRef}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import ServerImages from \"./ServerImages\";\r\n\r\nexport default ServerImages;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst ServerImages = (props) => {\r\n  return (\r\n    <div className=\"card shadow-sm rounded-0 rounded-bottom mt-4 mt-md-0 mt-lg-1\">\r\n      <div className=\"card-header text-center fs-2\">Saved Images On Server</div>\r\n      <div className=\"py-3 scrolller\">\r\n        {props.loader ? (\r\n          <div className=\"pt-4\">\r\n            <Loader type=\"Oval\" color=\"black\" height={50} width={50} />\r\n            <p className=\"pt-2\">Loading..</p>\r\n          </div>\r\n        ) : props.images.length > 0 ? (\r\n          props.images.map((image, index) => (\r\n            <img\r\n              src={image.src}\r\n              key={index}\r\n              id={index}\r\n              alt=\"\"\r\n              onClick={props.loadImage}\r\n              className=\"border m-3 col-7 col-sm-5 col-md-4 col-lg-6 col-xl-3 my-2 shadow-sm zoom\"\r\n            />\r\n          ))\r\n        ) : (\r\n          <h6 className=\"fst-italic\">(Empty List)</h6>\r\n        )}\r\n      </div>\r\n      <div className=\"card border-0 border-top bg-light d-inline py-1 rounded-0 rounded-bottom\">\r\n        <button\r\n          className=\"btn col-10 col-lg-5 btn-outline-dark shadow-sm fs-5 my-1 me-lg-3\"\r\n          onClick={props.saveImage}\r\n        >\r\n          Save image\r\n        </button>\r\n        <button\r\n          className=\"btn col-10 col-lg-5 btn-outline-dark shadow-sm fs-5 my-1\"\r\n          onClick={props.deleteAll}\r\n        >\r\n          Delete All\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerImages;\r\n","import ColorPicker from \"./ColorPicker\";\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n  let boxColor = {\r\n    backgroundColor: props.rgbColor,\r\n  };\r\n\r\n  return (\r\n    <div className=\"card py-3 shadow\">\r\n      <h3>{props.title}</h3>\r\n      <div className=\"color\" style={boxColor}></div>\r\n      <div className=\"result pb-4\">{props.rgbColor}</div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"red\"\r\n          value={props.color.red}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>red: {props.color.red}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"green\"\r\n          value={props.color.green}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>green: {props.color.green}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"blue\"\r\n          value={props.color.blue}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>blue: {props.color.blue}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          name=\"alpha\"\r\n          step=\"0.01\"\r\n          value={props.color.alpha}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>alpha: {props.color.alpha}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import BrushSize from \"./BrushSize\";\r\n\r\nexport default BrushSize;\r\n","import React from \"react\";\r\n\r\nconst BrushSize = (props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <p className=\"fs-7 px-2\">Brush Size</p>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"20\"\r\n          value={props.brushSize}\r\n          onChange={(event) => props.setBrushSize(event.target.value)}\r\n        />\r\n        <p className=\"fw-bold fs-5 d-inline\"> {props.brushSize}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrushSize;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport BrushSize from \"../BrushSize\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"card shadow pt-3\">\r\n      <div\r\n        className=\"menu\"\r\n        title={props.expandCanvas ? \"Reduce\" : \"Expand\"}\r\n        onClick={() => props.setExpandCanvas(!props.expandCanvas)}\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <h1 className=\"display-1\">PaintMe</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md\">\r\n          <p className=\"fs-7 d-inline\">Pos: </p>\r\n          <p className=\"fs-6 fw-bold d-inline\">\r\n            {props.offset.x},{props.offset.y}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md\">\r\n          <p className=\"display-6 fs-6 d-inline mt-5\">By David Saal</p>\r\n        </div>\r\n        <div className=\"col-12 col-md\">\r\n          <BrushSize\r\n            brushSize={props.brushSize}\r\n            setBrushSize={props.setBrushSize}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import LoadImage from \"./LoadImage\";\r\n\r\nexport default LoadImage;\r\n","import React from \"react\";\r\n\r\nconst LoadImage = (props) => {\r\n  return (\r\n    <div className=\"col-10 col-lg-4\">\r\n      <label\r\n        htmlFor=\"file-upload\"\r\n        className=\"btn btn-outline-dark shadow-sm fs-5 col-12\"\r\n      >\r\n        <i className=\"fa fa-cloud-upload\"></i> Choose File\r\n      </label>\r\n      <input\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        onChange={props.handleFiles}\r\n        className=\"d-none\"\r\n      />\r\n      <p className=\"fst-italic pt-1\" Style=\"font-size: 0.9rem;\">\r\n        {props.fileName ? props.fileName : \"No File\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadImage;\r\n","import Container from \"./Container\";\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport LoadImage from \"../LoadImage\";\r\n\r\nconst Container = (props) => {\r\n  return (\r\n    <div className=\"card shadow-sm rounded-0\">\r\n      <div className=\"row justify-content-center pt-lg-3 py-3 py-lg-0\">\r\n        <LoadImage fileName={props.fileName} handleFiles={props.handleFiles} />\r\n        <div className=\"col-10 col-lg-7 ps-lg-1\">\r\n          <button\r\n            className=\"btn btn-outline-dark shadow-sm fs-5 col-12\"\r\n            onClick={props.clearCanvas}\r\n          >\r\n            Clear All\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Canvas from \"./Canvas\";\nimport ServerImages from \"./ServerImages\";\nimport ColorPicker from \"./ColorPicker\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [brushColor, setBrushColor] = useState({\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 1,\n  });\n\n  const [bgColor, setBgColor] = useState({\n    red: 255,\n    green: 255,\n    blue: 255,\n    alpha: 1,\n  });\n\n  const rgbBrushColor =\n    brushColor.alpha === 1\n      ? `rgb(${brushColor.red}, ${brushColor.green}, ${brushColor.blue})`\n      : `rgba(${brushColor.red}, ${brushColor.green}, ${brushColor.blue}, ${brushColor.alpha})`;\n\n  const rgbBgColor =\n    bgColor.alpha === 1\n      ? `rgb(${bgColor.red}, ${bgColor.green}, ${bgColor.blue})`\n      : `rgba(${bgColor.red}, ${bgColor.green}, ${bgColor.blue}, ${bgColor.alpha})`;\n\n  const [brushSize, setBrushSize] = useState(5);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  const [fileName, setFileName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [expandCanvas, setExpandCanvas] = useState(false);\n  const [loader, setLoader] = useState(true);\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const resizeHandler = (_) => {\n    const canvas = canvasRef.current;\n    canvas.width = inputRef.current.getBoundingClientRect().width - 25;\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", resizeHandler, true);\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler, true);\n    };\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = inputRef.current.getBoundingClientRect().width - 25;\n  }, [expandCanvas]);\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.width = inputRef.current.getBoundingClientRect().width - 25;\n    const context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.strokeStyle = rgbBrushColor;\n    context.lineWidth = brushSize;\n    contextRef.current = context;\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(\"https://paintmee.herokuapp.com\");\n    const json = res.json();\n    return json;\n  };\n\n  useEffect(() => {\n    prepareCanvas();\n    fetchData().then((images) => {\n      setLoader(false);\n      setImages(images);\n    });\n  }, []);\n\n  const startDrawing = ({ nativeEvent }) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.strokeStyle = rgbBrushColor;\n    context.lineWidth = brushSize;\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setOffset({ x: offsetX, y: offsetY });\n  };\n\n  const clearCanvas = () => {\n    setFileName(\"\");\n    setOffset({ x: 0, y: 0 });\n    setBgColor({ red: 255, green: 255, blue: 255, alpha: 1 });\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = `rgba(255, 255, 255, 1)`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const changeBrushColor = (event) => {\n    const { name, value } = event.target;\n    setBrushColor({ ...brushColor, [name]: value });\n  };\n\n  const changeBgColor = (event) => {\n    const { name, value } = event.target;\n    setBgColor({ ...bgColor, [name]: value });\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = rgbBgColor;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const handleFiles = (event) => {\n    if (event.target.files.length) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      var img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = function () {\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n    }\n  };\n\n  const b64toBlob = (b64Data, contentType = \"image/png\", sliceSize = 512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  };\n\n  const loadImage = (event) => {\n    setFileName(\"\");\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = `rgba(255, 255, 255, 1)`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    var b64Data = event.target.src.split(\",\")[1].trim();\n    var blob = b64toBlob(b64Data);\n    var img = new Image();\n    img.src = URL.createObjectURL(blob);\n    img.onload = function () {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n\n  const saveImage = async () => {\n    setLoader(true);\n    const canvas = canvasRef.current;\n    var imageUrl = canvas.toDataURL();\n    const res = await fetch(\"https://paintmee.herokuapp.com\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ src: imageUrl }),\n    });\n    setLoader(false);\n    if (res.status === 200) {\n      setImages([...images, { src: imageUrl }]);\n    } else {\n      res.status === 401 && alert(\"Error reading from database.\");\n      res.status === 402 &&\n        alert(\"Server reached max limit, please delete images.\");\n      res.status === 403 && alert(\"Error with image src pattern.\");\n      res.status === 404 && alert(\"Error saving image to database.\");\n    }\n  };\n\n  const deleteAll = async () => {\n    setLoader(true);\n    const res = await fetch(\"https://paintmee.herokuapp.com\", {\n      method: \"DELETE\",\n    });\n    setLoader(false);\n    if (res.status === 200) {\n      setImages([]);\n    } else {\n      res.status === 405 && alert(\"Error deleting images.\");\n    }\n  };\n\n  return (\n    <div className=\"wrapper pt-4\">\n      <div className={expandCanvas ? \"col-11 col-lg-11\" : \"col-10\"}>\n        <Header\n          brushSize={brushSize}\n          setBrushSize={setBrushSize}\n          offset={offset}\n          saveImage={saveImage}\n          deleteAll={deleteAll}\n          images={images}\n          loadImage={loadImage}\n          expandCanvas={expandCanvas}\n          setExpandCanvas={setExpandCanvas}\n        />\n        <div className=\"row pt-4\">\n          <div className=\"col pb-5 pb-xl-0\" id=\"colorPicker1\">\n            <ColorPicker\n              title=\"Brush Color\"\n              color={brushColor}\n              changeColor={changeBrushColor}\n              rgbColor={rgbBrushColor}\n            />\n          </div>\n          <div\n            ref={inputRef}\n            className={\n              expandCanvas\n                ? \"col-12 col-lg-6 col-xl-7 pb-4 pb-lg-0\"\n                : \"col-12 col-lg-5 col-xl-6 pb-4 pb-lg-0\"\n            }\n            id=\"canvas\"\n          >\n            <Canvas\n              startDrawing={startDrawing}\n              finishDrawing={finishDrawing}\n              draw={draw}\n              canvasRef={canvasRef}\n            />\n            <Container\n              fileName={fileName}\n              handleFiles={handleFiles}\n              clearCanvas={clearCanvas}\n            />\n            <ServerImages\n              saveImage={saveImage}\n              deleteAll={deleteAll}\n              images={images}\n              loadImage={loadImage}\n              loader={loader}\n            />\n          </div>\n          <div className=\"col pb-5 pb-xl-0\" id=\"colorPicker2\">\n            <ColorPicker\n              title=\"Background Color\"\n              color={bgColor}\n              changeColor={changeBgColor}\n              rgbColor={rgbBgColor}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}