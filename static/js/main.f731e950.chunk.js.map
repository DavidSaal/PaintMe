{"version":3,"sources":["components/Canvas/index.jsx","components/Canvas/Canvas.jsx","components/ServerImages/index.jsx","components/ServerImages/ServerImages.jsx","components/ColorPicker/index.jsx","components/ColorPicker/ColorPicker.jsx","components/BrushSize/index.jsx","components/BrushSize/BrushSize.jsx","components/Header/index.jsx","components/Header/Header.jsx","components/LoadImage/index.jsx","components/LoadImage/LoadImage.jsx","components/Container/index.jsx","components/Container/Container.jsx","components/App.jsx","index.js"],"names":["Canvas","props","className","width","expandCanvas","height","onMouseDown","startDrawing","onMouseUp","finishDrawing","onMouseMove","draw","ref","canvasRef","ServerImages","images","length","map","image","index","src","id","alt","onClick","loadImage","saveImage","deleteAll","ColorPicker","boxColor","backgroundColor","rgbColor","title","style","type","min","max","name","value","color","red","onChange","changeColor","green","blue","step","alpha","BrushSize","brushSize","event","setBrushSize","target","Header","setExpandCanvas","offset","x","y","LoadImage","htmlFor","handleFiles","Style","fileName","Container","clearCanvas","App","useState","brushColor","setBrushColor","bgColor","setBgColor","rgbBrushColor","rgbBgColor","setOffset","setFileName","setImages","isDrawing","setIsDrawing","useRef","contextRef","fetchData","a","fetch","res","json","useEffect","context","current","getContext","lineCap","strokeStyle","lineWidth","prepareCanvas","then","canvas","fillStyle","fillRect","blob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","b64toBlob","split","trim","img","Image","URL","createObjectURL","onload","drawImage","imageUrl","toDataURL","method","headers","body","JSON","stringify","alert","nativeEvent","offsetX","offsetY","beginPath","moveTo","closePath","lineTo","stroke","files","file","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f731e950.chunk.js","sourcesContent":["import Canvas from \"./Canvas\";\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"./Canvas.css\";\r\n\r\nconst Canvas = (props) => {\r\n  return (\r\n    <canvas\r\n      className=\"card shadow rounded-0 rounded-top\"\r\n      width={props.expandCanvas ? \"1100\" : \"800\"}\r\n      height={props.expandCanvas ? \"600\" : \"500\"}\r\n      onMouseDown={props.startDrawing}\r\n      onMouseUp={props.finishDrawing}\r\n      onMouseMove={props.draw}\r\n      ref={props.canvasRef}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import ServerImages from \"./ServerImages\";\r\n\r\nexport default ServerImages;\r\n","import React from \"react\";\r\n\r\nconst ServerImages = (props) => {\r\n  return (\r\n    <div className=\"card shadow-sm rounded-0 rounded-bottom\">\r\n      <div className=\"card-header text-center fs-2\">Saved Images On Server</div>\r\n      <div className=\"py-3 scrolller\">\r\n        {props.images.length > 0 ? (\r\n          props.images.map((image, index) => (\r\n            <img\r\n              src={image.src}\r\n              key={index}\r\n              id={index}\r\n              alt=\"\"\r\n              onClick={props.loadImage}\r\n              className=\"border col-3 m-2 shadow-sm zoom\"\r\n            />\r\n          ))\r\n        ) : (\r\n          <h6 className=\"fst-italic\">(Empty List)</h6>\r\n        )}\r\n      </div>\r\n      <div className=\"card border-0 border-top bg-light d-inline py-1 rounded-0 rounded-bottom\">\r\n        <button\r\n          className=\"btn col-4 btn-outline-dark shadow-sm fs-5 my-1 mx-4\"\r\n          onClick={props.saveImage}\r\n        >\r\n          Save image\r\n        </button>\r\n        <button\r\n          className=\"btn col-4 btn-outline-dark shadow-sm fs-5 my-1 mx-4\"\r\n          onClick={props.deleteAll}\r\n        >\r\n          Delete All\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerImages;\r\n","import ColorPicker from \"./ColorPicker\";\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n  let boxColor = {\r\n    backgroundColor: props.rgbColor,\r\n  };\r\n\r\n  return (\r\n    <div className=\"card py-3 shadow\">\r\n      <h3>{props.title}</h3>\r\n      <div className=\"color\" style={boxColor}></div>\r\n      <div className=\"result pb-4\">{props.rgbColor}</div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"red\"\r\n          value={props.color.red}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>red: {props.color.red}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"green\"\r\n          value={props.color.green}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>green: {props.color.green}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"blue\"\r\n          value={props.color.blue}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>blue: {props.color.blue}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          name=\"alpha\"\r\n          step=\"0.01\"\r\n          value={props.color.alpha}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>alpha: {props.color.alpha}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import BrushSize from \"./BrushSize\";\r\n\r\nexport default BrushSize;\r\n","import React from \"react\";\r\n\r\nconst BrushSize = (props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <p className=\"fs-7 px-2\">Brush Size</p>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"20\"\r\n          value={props.brushSize}\r\n          onChange={(event) => props.setBrushSize(event.target.value)}\r\n        />\r\n        <p className=\"fw-bold fs-5 d-inline\"> {props.brushSize}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrushSize;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport BrushSize from \"../BrushSize\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"card shadow pt-3 col-9\">\r\n        <div\r\n          className=\"menu\"\r\n          title={props.expandCanvas ? \"Reduce\" : \"Expand\"}\r\n          onClick={() => props.setExpandCanvas(!props.expandCanvas)}\r\n        >\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n        <h1 className=\"display-1\">PaintMe</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <p className=\"fs-7 d-inline\">Pos: </p>\r\n            <p className=\"fs-6 fw-bold d-inline\">\r\n              {props.offset.x},{props.offset.y}\r\n            </p>\r\n          </div>\r\n          <div className=\"col\">\r\n            <p className=\"display-6 fs-6 d-inline mt-5\">By David Saal</p>\r\n          </div>\r\n          <div className=\"col\">\r\n            <BrushSize\r\n              brushSize={props.brushSize}\r\n              setBrushSize={props.setBrushSize}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import LoadImage from \"./LoadImage\";\r\n\r\nexport default LoadImage;\r\n","import React from \"react\";\r\n\r\nconst LoadImage = (props) => {\r\n  return (\r\n    <div className=\"col-4\">\r\n      <label\r\n        htmlFor=\"file-upload\"\r\n        className=\"btn btn-outline-dark shadow-sm fs-5 col-12\"\r\n      >\r\n        <i className=\"fa fa-cloud-upload\"></i> Choose File\r\n      </label>\r\n      <input\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        onChange={props.handleFiles}\r\n        className=\"d-none\"\r\n      />\r\n      <p className=\"fst-italic pt-1\" Style=\"font-size: 0.9rem;\">\r\n        {props.fileName ? props.fileName : \"No File\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadImage;\r\n","import Container from \"./Container\";\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport LoadImage from \"../LoadImage\";\r\n\r\nconst Container = (props) => {\r\n  return (\r\n    <div className=\"card shadow-sm rounded-0\">\r\n      <div className=\"row justify-content-center pt-3\">\r\n        <LoadImage fileName={props.fileName} handleFiles={props.handleFiles} />\r\n        <div className=\"col-7\">\r\n          <button\r\n            className=\"btn btn-outline-dark shadow-sm fs-5 col-12\"\r\n            onClick={props.clearCanvas}\r\n          >\r\n            Clear All\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Canvas from \"./Canvas\";\nimport ServerImages from \"./ServerImages\";\nimport ColorPicker from \"./ColorPicker\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [brushColor, setBrushColor] = useState({\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 1,\n  });\n\n  const [bgColor, setBgColor] = useState({\n    red: 100,\n    green: 255,\n    blue: 255,\n    alpha: 1,\n  });\n\n  const rgbBrushColor =\n    brushColor.alpha === 1\n      ? `rgb(${brushColor.red}, ${brushColor.green}, ${brushColor.blue})`\n      : `rgba(${brushColor.red}, ${brushColor.green}, ${brushColor.blue}, ${brushColor.alpha})`;\n\n  const rgbBgColor =\n    bgColor.alpha === 1\n      ? `rgb(${bgColor.red}, ${bgColor.green}, ${bgColor.blue})`\n      : `rgba(${bgColor.red}, ${bgColor.green}, ${bgColor.blue}, ${bgColor.alpha})`;\n\n  const [brushSize, setBrushSize] = useState(5);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  const [fileName, setFileName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [expandCanvas, setExpandCanvas] = useState(false);\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.strokeStyle = rgbBrushColor;\n    context.lineWidth = brushSize;\n    contextRef.current = context;\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:80\");\n    const json = res.json();\n    return json;\n  };\n\n  useEffect(() => {\n    prepareCanvas();\n    fetchData().then((images) => {\n      setImages(images);\n    });\n  }, []);\n\n  const startDrawing = ({ nativeEvent }) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.strokeStyle = rgbBrushColor;\n    context.lineWidth = brushSize;\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setOffset({ x: offsetX, y: offsetY });\n  };\n\n  const clearCanvas = () => {\n    setFileName(\"\");\n    setOffset({ x: 0, y: 0 });\n    setBgColor({ red: 255, green: 255, blue: 255, alpha: 1 });\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = `rgba(255, 255, 255, 1)`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const changeBrushColor = (event) => {\n    const { name, value } = event.target;\n    setBrushColor({ ...brushColor, [name]: value });\n  };\n\n  const changeBgColor = (event) => {\n    const { name, value } = event.target;\n    setBgColor({ ...bgColor, [name]: value });\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = rgbBgColor;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const handleFiles = (event) => {\n    if (event.target.files.length) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      var img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = function () {\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n    }\n  };\n\n  const b64toBlob = (b64Data, contentType = \"image/png\", sliceSize = 512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  };\n\n  const loadImage = (event) => {\n    setFileName(\"\");\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = `rgba(255, 255, 255, 1)`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    var b64Data = event.target.src.split(\",\")[1].trim();\n    var blob = b64toBlob(b64Data);\n    var img = new Image();\n    img.src = URL.createObjectURL(blob);\n    img.onload = function () {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n\n  const saveImage = async () => {\n    const canvas = canvasRef.current;\n    var imageUrl = canvas.toDataURL();\n    const res = await fetch(\"http://localhost:80/saveImage\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ src: imageUrl }),\n    });\n    const json = res.json();\n    json.then((res) => {\n      res\n        ? setImages([...images, { src: imageUrl }])\n        : alert(\"Something went wrong. Please try again.\");\n    });\n  };\n\n  const deleteAll = async () => {\n    const res = await fetch(\"http://localhost:80/deleteAll\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    const json = res.json();\n    json.then((res) => {\n      res ? setImages([]) : alert(\"Something went wrong. Please try again.\");\n    });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Header\n        brushSize={brushSize}\n        setBrushSize={setBrushSize}\n        offset={offset}\n        saveImage={saveImage}\n        deleteAll={deleteAll}\n        images={images}\n        loadImage={loadImage}\n        expandCanvas={expandCanvas}\n        setExpandCanvas={setExpandCanvas}\n      />\n      <div className=\"center pt-4\">\n        <div className={expandCanvas ? \"row col-12\" : \"row col-9\"}>\n          <div className=\"col\">\n            <ColorPicker\n              title=\"Brush Color\"\n              color={brushColor}\n              changeColor={changeBrushColor}\n              rgbColor={rgbBrushColor}\n            />\n          </div>\n          <div className=\"col\">\n            <Canvas\n              startDrawing={startDrawing}\n              finishDrawing={finishDrawing}\n              draw={draw}\n              canvasRef={canvasRef}\n              expandCanvas={expandCanvas}\n            />\n            <Container\n              fileName={fileName}\n              handleFiles={handleFiles}\n              clearCanvas={clearCanvas}\n            />\n            <ServerImages\n              saveImage={saveImage}\n              deleteAll={deleteAll}\n              images={images}\n              loadImage={loadImage}\n            />\n          </div>\n          <div className=\"col\">\n            <ColorPicker\n              title=\"Background Color\"\n              color={bgColor}\n              changeColor={changeBgColor}\n              rgbColor={rgbBgColor}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}