{"version":3,"sources":["components/Canvas/index.jsx","components/Canvas/Canvas.jsx","components/ServerImages/index.jsx","components/ServerImages/ServerImages.jsx","components/ColorPicker/index.jsx","components/ColorPicker/ColorPicker.jsx","components/BrushSize/index.jsx","components/BrushSize/BrushSize.jsx","images/logo.png","components/Header/index.jsx","components/Header/Header.jsx","components/LoadImage/index.jsx","components/LoadImage/LoadImage.jsx","components/Container/index.jsx","components/Container/Container.jsx","components/App.jsx","index.js"],"names":["Canvas","props","className","height","onMouseDown","startDrawing","onMouseUp","finishDrawing","onMouseMove","draw","ref","canvasRef","ServerImages","loading","count","width","images","length","map","image","type","aria-label","id","_id","onClick","deleteImage","src","alt","loadImage","Date","createdAt","toUTCString","saveImage","deleteAll","ColorPicker","boxColor","backgroundColor","rgbColor","title","style","min","max","name","value","color","red","onChange","changeColor","green","blue","step","alpha","BrushSize","brushSize","event","setBrushSize","target","Header","expandCanvas","setExpandCanvas","logo","Style","offset","x","y","LoadImage","htmlFor","handleFiles","fileName","Container","clearCanvas","App","useState","brushColor","setBrushColor","bgColor","setBgColor","rgbBrushColor","rgbBgColor","setOffset","setFileName","setImages","setLoading","isDrawing","setIsDrawing","useRef","contextRef","inputRef","resizeHandler","_","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","fetchData","a","fetch","res","json","canvas","context","getContext","lineCap","strokeStyle","lineWidth","prepareCanvas","then","fillStyle","fillRect","blob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","b64toBlob","split","trim","img","Image","URL","createObjectURL","onload","drawImage","imageUrl","toDataURL","method","headers","body","JSON","stringify","savedImage","status","alert","filter","nativeEvent","offsetX","offsetY","beginPath","moveTo","closePath","lineTo","stroke","files","file","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be36bdea.chunk.js","sourcesContent":["import Canvas from \"./Canvas\";\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"./Canvas.css\";\r\n\r\nconst Canvas = (props) => {\r\n  return (\r\n    <canvas\r\n      className=\"card shadow rounded-0 rounded-top m-0\"\r\n      height=\"600\"\r\n      onMouseDown={props.startDrawing}\r\n      onMouseUp={props.finishDrawing}\r\n      onMouseMove={props.draw}\r\n      ref={props.canvasRef}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import ServerImages from \"./ServerImages\";\r\n\r\nexport default ServerImages;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ServerImages = (props) => {\r\n  return (\r\n    <div className=\"card shadow-sm rounded-0 rounded-bottom mt-4 mt-md-0 mt-lg-1\">\r\n      <div className=\"card-header text-center fs-2\">Saved Images On Server</div>\r\n      <div className=\"py-4 mb-2 scrolller\">\r\n        {props.loading ? (\r\n          <div>\r\n            <Skeleton\r\n              className=\"border m-3 shadow-sm\"\r\n              count={3}\r\n              height={140}\r\n              width={210}\r\n            />\r\n            <p className=\"pt-2 mb-0 fs-4\">Loading..</p>\r\n          </div>\r\n        ) : props.images.length > 0 ? (\r\n          props.images.map((image) => (\r\n            <div className=\"position-relative d-inline\" key={image._id}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close fs-8 check p-0\"\r\n                aria-label=\"Close\"\r\n                id={image._id}\r\n                onClick={props.deleteImage}\r\n              ></button>\r\n              <img\r\n                src={image.src}\r\n                id={image._id}\r\n                alt=\"\"\r\n                onClick={props.loadImage}\r\n                className=\"border m-3 col-7 col-sm-5 col-md-4 col-lg-6 col-xl-3 my-2 shadow-sm zoom\"\r\n              />\r\n              <p className=\"position-absolute start-50 translate-middle ms-2 mt-1 fs-8\">\r\n                {new Date(image.createdAt).toUTCString()}\r\n              </p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h6 className=\"fst-italic\">(Empty List)</h6>\r\n        )}\r\n      </div>\r\n      <div className=\"card border-0 border-top bg-light d-inline py-1 rounded-0 rounded-bottom\">\r\n        <button\r\n          className=\"btn col-10 col-lg-5 btn-outline-dark shadow-sm fs-5 my-1 me-lg-3\"\r\n          onClick={props.saveImage}\r\n        >\r\n          Save image <i className=\"fa fa-save fa-1x ms-1\"></i>\r\n        </button>\r\n        <button\r\n          className=\"btn col-10 col-lg-5 btn-outline-dark shadow-sm fs-5 my-1\"\r\n          onClick={props.deleteAll}\r\n        >\r\n          Delete all <i className=\"fa fa-trash fa-1x ms-1\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerImages;\r\n","import ColorPicker from \"./ColorPicker\";\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n  let boxColor = {\r\n    backgroundColor: props.rgbColor,\r\n  };\r\n\r\n  return (\r\n    <div className=\"card py-3 shadow\">\r\n      <h3>{props.title}</h3>\r\n      <div className=\"color\" style={boxColor}></div>\r\n      <div className=\"result pb-4\">{props.rgbColor}</div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"red\"\r\n          value={props.color.red}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>red: {props.color.red}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"green\"\r\n          value={props.color.green}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>green: {props.color.green}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          name=\"blue\"\r\n          value={props.color.blue}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>blue: {props.color.blue}</div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          name=\"alpha\"\r\n          step=\"0.01\"\r\n          value={props.color.alpha}\r\n          onChange={props.changeColor}\r\n        />\r\n        <div>alpha: {props.color.alpha}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import BrushSize from \"./BrushSize\";\r\n\r\nexport default BrushSize;\r\n","import React from \"react\";\r\n\r\nconst BrushSize = (props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <p className=\"fs-7 px-2\">Brush Size</p>\r\n      <div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"20\"\r\n          value={props.brushSize}\r\n          onChange={(event) => props.setBrushSize(event.target.value)}\r\n        />\r\n        <p className=\"fw-bold fs-5 d-inline\"> {props.brushSize}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrushSize;\r\n","export default __webpack_public_path__ + \"static/media/logo.c488cf3c.png\";","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport BrushSize from \"../BrushSize\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"card shadow pt-3\">\r\n      <div\r\n        className=\"menu\"\r\n        title={props.expandCanvas ? \"Reduce\" : \"Expand\"}\r\n        onClick={() => props.setExpandCanvas(!props.expandCanvas)}\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"me-5\">\r\n        <h1 className=\"display-1 d-inline\">Paint</h1>\r\n        <h1 className=\"display-1 text-primary d-inline\">Me</h1>\r\n        <img\r\n          src={logo}\r\n          alt=\"Logo\"\r\n          className=\"position-absolute ps-2 mt-3\"\r\n          Style=\"width:70px; height:60px\"\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md\">\r\n          <p className=\"fs-7 d-inline\">Pos: </p>\r\n          <p className=\"fs-6 fw-bold d-inline\">\r\n            {props.offset.x},{props.offset.y}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md\">\r\n          <p className=\"display-6 fs-6 d-inline mt-5\">By David Saal</p>\r\n        </div>\r\n        <div className=\"col-12 col-md\">\r\n          <BrushSize\r\n            brushSize={props.brushSize}\r\n            setBrushSize={props.setBrushSize}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import LoadImage from \"./LoadImage\";\r\n\r\nexport default LoadImage;\r\n","import React from \"react\";\r\n\r\nconst LoadImage = (props) => {\r\n  return (\r\n    <div className=\"col-10 col-lg-5\">\r\n      <label\r\n        htmlFor=\"file-upload\"\r\n        className=\"btn btn-outline-dark shadow-sm fs-5 col-12\"\r\n      >\r\n        Choose Background <i className=\"fa fa-cloud-upload fa-1x ms-1\"></i>\r\n      </label>\r\n      <input\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        onChange={props.handleFiles}\r\n        className=\"d-none\"\r\n      />\r\n      <p className=\"fst-italic pt-1\" Style=\"font-size: 0.9rem;\">\r\n        {props.fileName ? props.fileName : \"No File\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadImage;\r\n","import Container from \"./Container\";\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport LoadImage from \"../LoadImage\";\r\n\r\nconst Container = (props) => {\r\n  return (\r\n    <div className=\"card shadow-sm rounded-0\">\r\n      <div className=\"row justify-content-center pt-lg-3 py-3 py-lg-0\">\r\n        <LoadImage fileName={props.fileName} handleFiles={props.handleFiles} />\r\n        <div className=\"col-10 col-lg-6 ps-lg-1\">\r\n          <button\r\n            className=\"btn btn-outline-dark shadow-sm fs-5 col-12\"\r\n            onClick={props.clearCanvas}\r\n          >\r\n            Clear Canvas <i className=\"fa fa-refresh fa-1x ms-1\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Canvas from \"./Canvas\";\nimport ServerImages from \"./ServerImages\";\nimport ColorPicker from \"./ColorPicker\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [brushColor, setBrushColor] = useState({\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 1,\n  });\n\n  const [bgColor, setBgColor] = useState({\n    red: 255,\n    green: 255,\n    blue: 255,\n    alpha: 1,\n  });\n\n  const rgbBrushColor =\n    brushColor.alpha === 1\n      ? `rgb(${brushColor.red}, ${brushColor.green}, ${brushColor.blue})`\n      : `rgba(${brushColor.red}, ${brushColor.green}, ${brushColor.blue}, ${brushColor.alpha})`;\n\n  const rgbBgColor =\n    bgColor.alpha === 1\n      ? `rgb(${bgColor.red}, ${bgColor.green}, ${bgColor.blue})`\n      : `rgba(${bgColor.red}, ${bgColor.green}, ${bgColor.blue}, ${bgColor.alpha})`;\n\n  const [brushSize, setBrushSize] = useState(5);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  const [fileName, setFileName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [expandCanvas, setExpandCanvas] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const resizeHandler = (_) => {\n    const canvas = canvasRef.current;\n    canvas.width = inputRef.current.getBoundingClientRect().width - 25;\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", resizeHandler, true);\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler, true);\n    };\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = inputRef.current.getBoundingClientRect().width - 25;\n  }, [expandCanvas]);\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.width = inputRef.current.getBoundingClientRect().width - 25;\n    const context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.strokeStyle = rgbBrushColor;\n    context.lineWidth = brushSize;\n    contextRef.current = context;\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(\"https://paintmee.herokuapp.com\");\n    const images = await res.json();\n    return images;\n  };\n\n  useEffect(() => {\n    prepareCanvas();\n    fetchData().then((images) => {\n      //setLoading(false);\n      setImages(images);\n    });\n  }, []);\n\n  const startDrawing = ({ nativeEvent }) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.strokeStyle = rgbBrushColor;\n    context.lineWidth = brushSize;\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setOffset({ x: offsetX, y: offsetY });\n  };\n\n  const clearCanvas = () => {\n    setFileName(\"\");\n    setOffset({ x: 0, y: 0 });\n    setBgColor({ red: 255, green: 255, blue: 255, alpha: 1 });\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = `rgba(255, 255, 255, 1)`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const changeBrushColor = (event) => {\n    const { name, value } = event.target;\n    setBrushColor({ ...brushColor, [name]: value });\n  };\n\n  const changeBgColor = (event) => {\n    const { name, value } = event.target;\n    setBgColor({ ...bgColor, [name]: value });\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = rgbBgColor;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const handleFiles = (event) => {\n    if (event.target.files.length) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      var img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = function () {\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n    }\n  };\n\n  const b64toBlob = (b64Data, contentType = \"image/png\", sliceSize = 512) => {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  };\n\n  const loadImage = (event) => {\n    setFileName(\"\");\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = `rgba(255, 255, 255, 1)`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    var b64Data = event.target.src.split(\",\")[1].trim();\n    var blob = b64toBlob(b64Data);\n    var img = new Image();\n    img.src = URL.createObjectURL(blob);\n    img.onload = function () {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  };\n\n  const saveImage = async () => {\n    setLoading(true);\n    const canvas = canvasRef.current;\n    var imageUrl = canvas.toDataURL();\n    const res = await fetch(\"https://paintmee.herokuapp.com\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ src: imageUrl }),\n    });\n    const savedImage = await res.json();\n    if (res.status === 200) {\n      setImages([...images, savedImage]);\n    } else {\n      res.status === 401 && alert(\"Error reading from database.\");\n      res.status === 402 &&\n        alert(\"Server reached max limit, please delete images.\");\n      res.status === 403 && alert(\"Error with image src pattern.\");\n      res.status === 404 && alert(\"Error saving image to database.\");\n    }\n    setLoading(false);\n  };\n\n  const deleteImage = async (event) => {\n    setLoading(true);\n    const res = await fetch(\"https://paintmee.herokuapp.com/deleteImage\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: event.target.id }),\n    });\n    if (res.status === 200) {\n      setImages(images.filter((image) => image._id !== event.target.id));\n    } else {\n      res.status === 405 && alert(\"Error deleting images.\");\n    }\n    setLoading(false);\n  };\n\n  const deleteAll = async () => {\n    setLoading(true);\n    const res = await fetch(\"https://paintmee.herokuapp.com\", {\n      method: \"DELETE\",\n    });\n    if (res.status === 200) {\n      setImages([]);\n    } else {\n      res.status === 405 && alert(\"Error deleting images.\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"wrapper pt-4\">\n      <div className={expandCanvas ? \"col-11 col-lg-11\" : \"col-10\"}>\n        <Header\n          brushSize={brushSize}\n          setBrushSize={setBrushSize}\n          offset={offset}\n          saveImage={saveImage}\n          deleteAll={deleteAll}\n          images={images}\n          loadImage={loadImage}\n          expandCanvas={expandCanvas}\n          setExpandCanvas={setExpandCanvas}\n        />\n        <div className=\"row pt-4\">\n          <div className=\"col pb-5 pb-xl-0\" id=\"colorPicker1\">\n            <ColorPicker\n              title=\"Brush Color\"\n              color={brushColor}\n              changeColor={changeBrushColor}\n              rgbColor={rgbBrushColor}\n            />\n          </div>\n          <div\n            ref={inputRef}\n            className={\n              expandCanvas\n                ? \"col-12 col-lg-6 col-xl-7 pb-4 pb-lg-0\"\n                : \"col-12 col-lg-5 col-xl-6 pb-4 pb-lg-0\"\n            }\n            id=\"canvas\"\n          >\n            <Canvas\n              startDrawing={startDrawing}\n              finishDrawing={finishDrawing}\n              draw={draw}\n              canvasRef={canvasRef}\n            />\n            <Container\n              fileName={fileName}\n              handleFiles={handleFiles}\n              clearCanvas={clearCanvas}\n            />\n            <ServerImages\n              saveImage={saveImage}\n              deleteAll={deleteAll}\n              images={images}\n              loadImage={loadImage}\n              deleteImage={deleteImage}\n              loading={loading}\n            />\n          </div>\n          <div className=\"col pb-5 pb-xl-0\" id=\"colorPicker2\">\n            <ColorPicker\n              title=\"Background Color\"\n              color={bgColor}\n              changeColor={changeBgColor}\n              rgbColor={rgbBgColor}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}